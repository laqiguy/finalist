Тема работы: Инструментальное окружение сборки готовых приложений для мобильных платформ
Тема обзора: Обзор существующих решений реализации "слабых зависимостей"
CASE средство


!!! Компонентно-ориентированное программирование — парадигма программирования, существенным образом опирающаяся на понятие компонента — независимого модуля исходного кода программы, предназначенного для повторного использования и развёртывания и реализующегося в виде множества языковых конструкций (например, «классов» в объектно-ориентированных языках программирования), объединённых по общему признаку и организованных в соответствии с определёнными правилами и ограничениями.

Инструментальное окружение - программное обеспечение, предназначенное для использования в ходе проектирования, разработки и сопровождения программ.

Мобильная платформа - операционная система для смартфонов, планшетов, КПК или других мобильных устройств.

Операционная система — комплекс взаимосвязанных программ, предназначенных для управления ресурсами компьютера и организации взаимодействия с пользователем.

CASE-средство - инструменты автоматизации процессов проектирования и разработки программного обеспечения для системного аналитика, разработчика ПО и программиста.

Мобильное приложение — программное обеспечение, предназначенное для работы на смартфонах, планшетах и других мобильных устройствах.

Программное обеспечение — все или часть программ, процедур, правил и соответствующей документации системы обработки информации 

Модуль — функционально законченный фрагмент программы

Модуль - логическая часть приложения с четко определенной функциональностью, является самодостаточной частью приложения, выполняющий четко определенную задачу.

Модуль-экран - модуль, который имеет UI составляющую

Зависимость – взаимосвязь между двумя модулями, когда для работы одного из них необходимы вызовы процедур/функций или доступ к данным из другого модуля. Зависимость = "сильная зависимость"

Тау-зависимость – зависимость меджу двумя модулями, когда один из них может использовать фунционал второго модуля, но при всем этом присутствие второго модуля не является обязательнымни и первый модуль имеет возможность обрабатывать его отсутствие// не вызывая ошибок компиляции или runtime.

Манифест модуля - файл-спецификация модуля, предназначенный для его описания: содержит такие данные о модуле как его имя, тип, корневой класс и метод его инициализации, внешний протокола взаимодействия, а также описание его "силных" и "слабых зависимостей"

Корневой класс - класс, в котором инициализируется объект модуля

Манифест приложения - файл-спецификации приложения, содеращий список всех необходимых модулей, путь к файлу конфигурации и файлу с asset'ами, а также корневой модуль.

Корневой модуль - UI-модуль, с котрого начинается инициализация приложения

Генератор шаблона-проекта модуля - утилита для генерации шаблонного проекта на основе манифеста модуля

Генератор шаблона-проекта приложения - утилита для генерации шаблонного проекта на основе манифеста приложения

Генератор кода сборки - утилита для генерации кода сборки приложения. 

Сборщик проекта - прикладная программа, на основе мнифеста приложения и используя набор спеиальных утилит формирующая готовое приложение.


!COM!
Описать разрешения конфликтов зависимостей




Приложение - программа, предназначенная для выполнения определённых задач и рассчитанная на непосредственное взаимодействие с пользователем.

Приложение – ПО, предназначенное для работы на смартфонах, планшетах и других мобильных устройствах, состоящее из модулей, связанных между собой в рамках некоторой конфигурации.