Мир большими шагами вступил в эпоху мобильных и носимых устройств. В 2007 году бы представлен iPhone, которых "взорвал" рынок смартфонов. Спустя почти 10 лет мы уже не представляем свою жизнь без смартфона в кармане с кучей разнообразных приложений от редактирования фотографий до управления квадрокоптерами, от игр до приложений для управления проектами, от мессенджеров до видео-конференций и стриминговых платформ. За эти 10 лет “взлетели” и “умерли” такие хиты как “Vine”, “Flappy bird”, “Pokémon go” и многие другие. За эти годоы технические возможности смартфонов возросли многократно. Например, на текущий момент последний выпущеный iPhone 7s в 120 раз производительнее iPhone 2007 года. Кроме всего прочего появились умные гаджеты, которыми можно управлять с телефона и интегрировать с ним. Чего только стоит растущий рынок смарт-часов и фитнес-браслетов. 

На данный момент конкуренция на рынке мобильных приложений очень высока. Раньше приложению достаточно было предоставить пользователью какой нибудь новый пользоватеьский опыт  или возможность, аналога которой нет сейчас на рынке, и приложение появлялось почти на каджом смартфоне и расширяло свою аудиторию тысячекратно. Самыми яркими примерами являются Instagram и Uber. Они являются неоспоримыми (по крайней мере пока что) лидерами в своём сегменте во многом из-за того, что несколько лет назад “так как они никто не делал”. Instagram позволил отредактировать фотографию и поделиться ей с сотнями тысяч пользователей буквально в несколько кликов. Uber - вызвать личный автомобиль в пару кликов. Сейчас у них есть сотни конкурентов по всему миру, но тем не менее они о сих пор держат лидерство на рынке. Сейчас же гораздо сложнее просто сделать что то новое. Пользователи уже привыкли в эргономичность дизайну и откликам за доли секунды. Поэтому сейчас как никогда важно найти равновесие между скоростью разработки, оптимизацией приложения и хорошим UI/UX. 


В мобильной разработке все важнее стало правильных пропорциях совмещать скорость и качество разработки. Кроме того, довольно часто приложения для разных заказчиков похожи друг на друга по функциональности, отличаясь лишь некоторыми особенностями или дополнительными возможностями. Каким образом можно ускорить и упростить разработку таких приложений, при этом не потеряв в качестве? Данный вопрос приводит нас к опыту использования CASE-средств в различных конструкторов, т.к. именно данную задачу они призваны решать.

В мобильной разработке существует множество конструкторов приложений, которые позволяют практически без знания архитектуры мобильной платформы и знания какого либо языка программирования, создавать приложения на различные мобильные платформы. Кроме того, да таких задач разработчики пишут свои подобия CASE-средств, которые остаются своеобразных «know-how» самих разработчиков.

Данная проблема привела к разработке инструментального окружения, позволяющего упростить и ускорить разработку приложений для мобильных платформ. Идея состоит в том, что бы свести разработку приложения к написанию модулей, необходимых для работы приложения, указать для каждого из них, какой функционал им необходим для работы. Кроме того дать возможность некоторым модулям отсутствовать в приложении, что не привело бы к ошибкам компиляции или ошибкам времени выполнения и при это могло влиять на логику работы модулей, которые от них зависят. Данных подход позволит писать код один раз и переиспользовать его в каждом новом. И по итогу свести сборку нового приложения к простому указанию его конфигурации и конфигурации его модулей. 

Смартфоны давно уже не являются роскошью или чем то экстраординарным. Их массовое распространение в начале 2010-х привело к тому, что рынок мобильной разработки вырос многократно и конкуренция на нем в том числе. И все важнее стало правильных пропорциях совмещать скорость и качество разработки. Кроме того, довольно часто приложения для разных заказчиков отличаются лишь некоторым уникальным функционалом, что приводит к вопросу о использовании конструкторов и case-средств. И в своем время такой же высокий рост развития интернета и необходимость разработки сайтов со схожим функционалом привел к широкому распространению разных конструкторов сайтов и case-средств. 

В мобильной разработке таких средств нет и вся автоматизация разработки пока что сводится к менеджерам пакетов. К тому же многие идеи case-средств невозможно реализовать из-за различных ограничений мобильных платформ на работу уже установленных приложений. Кроме того, хотелось бы использовать все возможности исключений и обработки отсутствующего функционала, что позволило бы писать код один раз, а потом просто использовать его в нужных местах.

Именно поэтому появилась идея разработки инструментального окружения, позволяющего упростить и ускорить разработку приложений для мобильных платформ. Идея состоит в том, что бы свести разработку приложения к написанию модулей, необходимых для работы приложения, указать для каждого из них, какой функционал им необходим для работы. Кроме того дать возможность некоторым модулям отсутствовать в приложении, что не привело бы к ошибкам компиляции или ошибкам времени выполнения. И в конце концов свести сборку нового приложения к простому указанию его конфигурации и конфигурации его модулей.

Один из первых и главных задач в посторении такого окружения, является формализация предметной области и проектирование его компонент и системы в целом. Требуется описать, что из себя представляет модули, как они взяимодействуют с системой и между собой. Что такое приложение и как оно формируется из модулей.